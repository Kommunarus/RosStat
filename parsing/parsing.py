import urllib.request as ur
import requests
import json
import pandas as pd
import datetime
from pandas.io.json import json_normalize

import pymysql
from pymysql.cursors import DictCursor

connection = pymysql.connect(
    host='localhost',
    user='kommunar',
    password='123',
    db='price',
    charset='utf8mb4',
    cursorclass=DictCursor
)

'''query = "DELETE FROM price.tab"
cursor = connection.cursor()
cursor.execute(query)
connection.commit()'''

# https://www.fedstat.ru/indicator/31454

params = {  'id':'57693',
            'lineObjectIds':['57831', '57939'],
            'columnObjectIds':['3', '33560'],
            'selectedFilterIds':['0_57693','3_2017','3_2018','3_2019','30611_950351','33560_1540228','33560_1540229','33560_1540230','33560_1540233','33560_1540234','33560_1540235','33560_1540236','33560_1540272','33560_1540273','33560_1540276','33560_1540282','33560_1540283','57831_1688487','57831_1688488','57831_1688489','57831_1688490','57831_1688491','57831_1688492','57831_1688493','57831_1688494','57831_1688495','57831_1688496','57831_1688497','57831_1688498','57831_1688499','57831_1688500','57831_1688501','57831_1688502','57831_1688503','57831_1688504','57831_1688505','57831_1688506','57831_1688507','57831_1688508','57831_1688509','57831_1688510','57831_1688511','57831_1688512','57831_1688513','57831_1688514','57831_1688515','57831_1688516','57831_1688517','57831_1688518','57831_1688522','57831_1688523','57831_1688524','57831_1688525','57831_1688526','57831_1688527','57831_1688528','57831_1688529','57831_1688530','57831_1688531','57831_1688532','57831_1688533','57831_1688534','57831_1688535','57831_1688536','57831_1688537','57831_1688538','57831_1688539','57831_1688540','57831_1688541','57831_1688542','57831_1688543','57831_1688545','57831_1688546','57831_1688547','57831_1688548','57831_1688549','57831_1688550','57831_1688551','57831_1688552','57831_1688553','57831_1688554','57831_1688555','57831_1688556','57831_1688557','57831_1688559','57831_1688560','57831_1688561','57831_1688562','57831_1688563','57831_1688564','57831_1688565','57831_1688566','57831_1688568','57831_1688571','57831_1688573','57831_1688574','57831_1688575','57831_1688576','57831_1688577','57831_1688578','57831_1688579','57831_1688581','57831_1688582','57831_1688583','57831_1688584','57831_1688585','57831_1688586','57831_1688587','57831_1692937','57831_1692938','57831_1692939','57831_1692940','57831_1695534','57831_1795276','57831_1795277','57939_1751300','57939_1751301','57939_1751302','57939_1751303','57939_1751304','57939_1751305','57939_1751307','57939_1754681','57939_1754682','57939_1754684','57939_1754685','57939_1757600','57939_1758144','57939_1758145','57939_1758146','57939_1758147','57939_1758148','57939_1758149','57939_1758150','57939_1758151','57939_1758152','57939_1758153','57939_1758154','57939_1758155','57939_1758156','57939_1758157','57939_1758158','57939_1758159','57939_1758160','57939_1758161','57939_1758163','57939_1758165','57939_1758167','57939_1758168','57939_1758170','57939_1758171','57939_1758173','57939_1758174','57939_1758175','57939_1758177','57939_1758178','57939_1758179','57939_1758181','57939_1758182','57939_1758184','57939_1758186','57939_1758187','57939_1758188','57939_1758189','57939_1758190','57939_1758191','57939_1758192','57939_1758193','57939_1758194','57939_1758195','57939_1758196','57939_1758197','57939_1758198','57939_1785641','57939_1785972','57939_1790697','57939_1795392','57939_1795393','57939_1795394','57939_1795395','57939_1795396','57939_1795397','57939_1795398']}
                
                
response = requests.get('https://www.fedstat.ru/indicator/dataGrid.do', params = params)

ss = response.json()


periods = {'1540283':'1',
           '1540282':'2',
           '1540236':'3',
           '1540229':'4',
           '1540235':'5',
           '1540234':'6',
           '1540233':'7',
           '1540228':'8',
           '1540276':'9',
           '1540273':'10',
           '1540272':'11',
           '1540230':'12',
           }

columns = ['region', 'product', 'data', 'price']



for i in ss['results']:
    reg = ''
    prod =''
    for k, v in i.items():
        if k == 'dim57831':
            reg = str(v)
        elif k == 'dim57939':
            prod = str(v)
        else:
            x = k.split('_')
            y = x[0].replace('dim','')
            m = periods[x[1]]
            query = "INSERT INTO price.tab(region, products, ymd, price) " \
                    "VALUES(%s,%s,%s,%s)"
            args = (reg, prod, datetime.datetime(int(y),int(m),1).strftime('%Y-%m-%d %H:%M:%S'), float(v.replace(',','.')))
            cursor = connection.cursor()
            cursor.execute(query, args)
            connection.commit()





